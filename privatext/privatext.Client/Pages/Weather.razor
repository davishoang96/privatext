@page "/weather"
@using Microsoft.AspNetCore.Authorization
@using privatext.Shared
@attribute [Authorize]
@rendermode InteractiveWebAssembly
@attribute [StreamRendering]
@inject HttpClient httpClient;

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates showing data.</p>

<button class="btn btn-primary" @onclick="LoadData">Load Data</button>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherDTO[]? forecasts;

    private async Task LoadData()
    {
        try
        {
            var res = await httpClient.GetFromJsonAsync<IEnumerable<WeatherDTO>>("/Weather/GetWeatherData");
            if (res != null)
            {
                forecasts = res.ToArray();
            }
        }
        catch(Exception ex)
        {
            
        }
        
    }
}
