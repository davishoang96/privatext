@page "/"
@inject IApiClient ApiClient
@inject IRandomString RandomString
@inject NavigationManager NavigationManager
@inject NotificationService NotificationService
@using System.Security.Cryptography
@using System.Text
@using privatext.Client.HttpClient
@using privatext.Services

<PageTitle>Privatext</PageTitle>

<RadzenRow JustifyContent="JustifyContent.Center" AlignItems="AlignItems.Center">
    <RadzenColumn Size="3"/>
    <RadzenColumn Size="6">
        <RadzenStack Visible="@ShowTextInput" JustifyContent="JustifyContent.Center" Orientation="Orientation.Vertical" Gap="10px">
            <RadzenStack JustifyContent="JustifyContent.Left" Orientation="Orientation.Horizontal">
                <h4>Create your private text</h4>
            </RadzenStack>
            <RadzenTextArea @bind-Value="@Content" Placeholder="Enter your text here..." MaxLength="4000" Rows="15" Cols="100"></RadzenTextArea>
            <RadzenStack Orientation="Orientation.Horizontal">
                <RadzenButton Click="@CreateMessage" Text="Create" ButtonStyle="ButtonStyle.Success" />
            </RadzenStack>
        </RadzenStack>
        <RadzenStack Visible="@ShowLink" JustifyContent="JustifyContent.Center" Orientation="Orientation.Vertical" Gap="10px">
            <RadzenStack JustifyContent="JustifyContent.Left" Orientation="Orientation.Vertical">
                <RadzenStack Orientation="Orientation.Vertical">
                    <RadzenFormField Text="Link">
                        <Start>
                            <RadzenIcon Icon="http" />
                        </Start>
                        <ChildContent>
                            <RadzenTextBox @bind-Value="@TextUrl" />
                        </ChildContent>
                        <End>
                            <RadzenIcon Visible="true" Icon="done" IconStyle="IconStyle.Secondary" />
                        </End>
                    </RadzenFormField>
                    <RadzenStack JustifyContent="JustifyContent.Center" Orientation="Orientation.Horizontal">
                        <RadzenButton>Copy link</RadzenButton>
                        <RadzenButton Click="@NewText" ButtonStyle="ButtonStyle.Success">New Text</RadzenButton>
                    </RadzenStack>
                </RadzenStack>
            </RadzenStack>
        </RadzenStack>
    </RadzenColumn>
    <RadzenColumn Size="3" />
</RadzenRow>

@code {

    private string Content { get; set; }
    private string TextUrl { get; set; }
    private bool ShowTextInput { get; set; }
    private bool ShowLink { get; set; }
    private string TextId { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        ShowTextInput = !ShowLink;
        Content = "qj;4o3mq;o34mvq34nv";
    }

    private async Task CreateMessage()
    {
        if(string.IsNullOrEmpty(Content))
        {
            NotificationService.Notify(new NotificationMessage 
            { 
                Severity = NotificationSeverity.Error, 
                Summary = "Warning", 
                Detail = "Message cannot be empty",
            });

            return;
        }

        var id = RandomString.Generate(32);
        var result = await ApiClient.CreateMessageEndpointAsync(new CreateMessageRequest
        {
            MessageDTO = new MessageDTO
            {
                MessageId = id,
                Content = Content,
            },
        });

        if(result)
        {
            TextId = id;
            TextUrl = $"{NavigationManager.BaseUri}text/{id}";
            ShowLink = true;
            ShowTextInput = false;

            NotificationService.Notify(new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Status",
                Detail = "Private text successfully created",
            });
        }
    }

    private void NewText()
    {
        Content = TextUrl = TextId = string.Empty;
        ShowTextInput = true;
        ShowLink = false;
    }
}
